include("keybindings.tis");

namespace settings {

    var settingsModified = false;

    function showContent(event, tabName) {
        var tabContents = self.selectAll(".tab-content");
        for (var i in tabContents) {
            i.style.set {
                display: "none";
            };
        }
        var tabLinks = self.selectAll(".tab-links");
        for (var i in tabLinks) {
            i.attributes.removeClass("active");
        }
        self.$(#{tabName}).style.set {
            display: "block";
        };
        event.target.attributes.addClass("active");
        activateTabScripts(tabName); 
    }

    function activateTabScripts(tabName) {
        if (tabName == "Keybindings") {
            keybindings.installKeybindingsListener();
            keybindings.addSaveDataHandler();
            keybindings.addCancelHandler();
            keybindings.setHandlersAdded(true);
            keybindings.loadConfig();
        }
    }

    function setSettingsModified(isModified) {
        settingsModified = isModified;

        var cancelQuitButton = self.select("#keybindings-cancelquit");
        if (isModified) {
            cancelQuitButton.value = "Cancel"
        } else {
            cancelQuitButton.value = "Quit"
        }
    }

    function settingsIsModified() {
        return settingsModified;
    }

}
